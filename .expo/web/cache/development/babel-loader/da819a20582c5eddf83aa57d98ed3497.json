{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/components/EditModal.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { THEME } from \"../theme\";\nimport { AppButton } from \"./ui/AppButton\";\nexport var EditModal = function EditModal(_ref) {\n  var visible = _ref.visible,\n      onCancel = _ref.onCancel,\n      value = _ref.value,\n      onSave = _ref.onSave;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var saveHandler = function saveHandler() {\n    if (title.trim().length < 3) {\n      Alert.alert('Ошибка!', \"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u043D\\u0430 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044F 3 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \" + title.trim().length + \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432.\");\n    } else {\n      onSave(title);\n    }\n  };\n\n  var cancelHandler = function cancelHandler() {\n    setTitle(value);\n    onCancel();\n  };\n\n  return React.createElement(Modal, {\n    visible: visible,\n    animationType: \"slide\",\n    transparent: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrap,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: title,\n    onChangeText: setTitle,\n    style: styles.input,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    maxLength: 64,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(AppButton, {\n    onPress: cancelHandler,\n    color: THEME.DANGER_COLOR,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"), React.createElement(AppButton, {\n    onPress: saveHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"))));\n};\nvar styles = StyleSheet.create({\n  wrap: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    padding: 10,\n    borderBottomColor: THEME.MAIN_COLOR,\n    borderBottomWidth: 2,\n    width: '80%'\n  },\n  buttons: {\n    width: '100%',\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"sources":["/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/components/EditModal.js"],"names":["React","useState","THEME","AppButton","EditModal","visible","onCancel","value","onSave","title","setTitle","saveHandler","trim","length","Alert","alert","cancelHandler","styles","wrap","input","buttons","DANGER_COLOR","StyleSheet","create","flex","justifyContent","alignItems","padding","borderBottomColor","MAIN_COLOR","borderBottomWidth","width","marginTop","flexDirection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,KAAT;AACA,SAASC,SAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0C;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACjE,kBAA0BP,QAAQ,CAACM,KAAD,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,KAAK,CAACG,IAAN,GAAaC,MAAb,GAAsB,CAA1B,EAA6B;AAC3BC,MAAAA,KAAK,CAACC,KAAN,CACE,SADF,mPAGIN,KAAK,CAACG,IAAN,GAAaC,MAHjB;AAMD,KAPD,MAOO;AACLL,MAAAA,MAAM,CAACC,KAAD,CAAN;AACD;AACF,GAXD;;AAaA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BN,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACAD,IAAAA,QAAQ;AACT,GAHD;;AAKA,SACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAED,OAAhB;AAAyB,IAAA,aAAa,EAAC,OAAvC;AAA+C,IAAA,WAAW,EAAE,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAET,KADT;AAEE,IAAA,YAAY,EAAEC,QAFhB;AAGE,IAAA,KAAK,EAAEO,MAAM,CAACE,KAHhB;AAIE,IAAA,WAAW,EAAC,6FAJd;AAKE,IAAA,cAAc,EAAC,MALjB;AAME,IAAA,WAAW,EAAE,KANf;AAOE,IAAA,SAAS,EAAE,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEJ,aAApB;AAAmC,IAAA,KAAK,EAAEd,KAAK,CAACmB,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAIE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEV,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJF,CAVF,CADF,CADF;AAqBD,CA1CM;AA4CP,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,UAAU,EAAE;AAHR,GADyB;AAM/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,iBAAiB,EAAE1B,KAAK,CAAC2B,UAFpB;AAGLC,IAAAA,iBAAiB,EAAE,CAHd;AAILC,IAAAA,KAAK,EAAE;AAJF,GANwB;AAY/BX,EAAAA,OAAO,EAAE;AACPW,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,SAAS,EAAE,EAFJ;AAGPC,IAAAA,aAAa,EAAE,KAHR;AAIPR,IAAAA,cAAc,EAAE;AAJT;AAZsB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TextInput, Button, Modal, Alert } from 'react-native'\nimport { THEME } from '../theme'\nimport { AppButton } from './ui/AppButton'\n\nexport const EditModal = ({ visible, onCancel, value, onSave }) => {\n  const [title, setTitle] = useState(value)\n\n  const saveHandler = () => {\n    if (title.trim().length < 3) {\n      Alert.alert(\n        'Ошибка!',\n        `Минимальная длинна названия 3 символа. Сейчас ${\n          title.trim().length\n        } символов.`\n      )\n    } else {\n      onSave(title)\n    }\n  }\n\n  const cancelHandler = () => {\n    setTitle(value)\n    onCancel()\n  }\n\n  return (\n    <Modal visible={visible} animationType='slide' transparent={false}>\n      <View style={styles.wrap}>\n        <TextInput\n          value={title}\n          onChangeText={setTitle}\n          style={styles.input}\n          placeholder='Введите название'\n          autoCapitalize='none'\n          autoCorrect={false}\n          maxLength={64}\n        />\n        <View style={styles.buttons}>\n          <AppButton onPress={cancelHandler} color={THEME.DANGER_COLOR}>\n            Отменить\n          </AppButton>\n          <AppButton onPress={saveHandler}>Сохранить</AppButton>\n        </View>\n      </View>\n    </Modal>\n  )\n}\n\nconst styles = StyleSheet.create({\n  wrap: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    padding: 10,\n    borderBottomColor: THEME.MAIN_COLOR,\n    borderBottomWidth: 2,\n    width: '80%'\n  },\n  buttons: {\n    width: '100%',\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}