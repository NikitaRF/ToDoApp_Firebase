{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/screens/TodoScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\nimport { THEME } from \"../theme\";\nimport { AppCard } from \"../components/ui/AppCard\";\nimport { EditModal } from \"../components/EditModal\";\nimport { AppTextBold } from \"../components/ui/AppTextBold\";\nimport { AppButton } from \"../components/ui/AppButton\";\nimport { TodoContext } from \"../context/todo/todoContext\";\nimport { ScreenContext } from \"../context/screen/screenContext\";\nexport var TodoScreen = function TodoScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(TodoContext),\n      todos = _useContext.todos,\n      updateTodo = _useContext.updateTodo,\n      removeTodo = _useContext.removeTodo;\n\n  var _useContext2 = useContext(ScreenContext),\n      todoId = _useContext2.todoId,\n      changeScreen = _useContext2.changeScreen;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var todo = todos.find(function (t) {\n    return t.id === todoId;\n  });\n\n  var saveHandler = function saveHandler(title) {\n    return _regeneratorRuntime.async(function saveHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(updateTodo(todo.id, title));\n\n          case 2:\n            setModal(false);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(EditModal, {\n    value: todo.title,\n    visible: modal,\n    onCancel: function onCancel() {\n      return setModal(false);\n    },\n    onSave: saveHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(AppCard, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(AppTextBold, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, todo.title), React.createElement(AppButton, {\n    onPress: function onPress() {\n      return setModal(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"edit\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(AppButton, {\n    onPress: function onPress() {\n      return changeScreen(null);\n    },\n    color: THEME.GREY_COLOR,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"back\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(AppButton, {\n    color: THEME.DANGER_COLOR,\n    onPress: function onPress() {\n      return removeTodo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"remove\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))));\n};\nvar styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15\n  },\n  button: {\n    width: Dimensions.get('window').width > 400 ? 150 : 100\n  },\n  title: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/screens/TodoScreen.js"],"names":["React","useState","useContext","FontAwesome","AntDesign","THEME","AppCard","EditModal","AppTextBold","AppButton","TodoContext","ScreenContext","TodoScreen","todos","updateTodo","removeTodo","todoId","changeScreen","modal","setModal","todo","find","t","id","saveHandler","title","styles","card","buttons","button","GREY_COLOR","DANGER_COLOR","StyleSheet","create","flexDirection","justifyContent","marginBottom","padding","width","Dimensions","get","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { StyleSheet, View, Button, Dimensions } from 'react-native'\nimport { FontAwesome, AntDesign } from '@expo/vector-icons'\nimport { THEME } from '../theme'\nimport { AppCard } from '../components/ui/AppCard'\nimport { EditModal } from '../components/EditModal'\nimport { AppTextBold } from '../components/ui/AppTextBold'\nimport { AppButton } from '../components/ui/AppButton'\nimport {TodoContext} from \"../context/todo/todoContext\";\nimport {ScreenContext} from \"../context/screen/screenContext\";\n\n\nexport const TodoScreen = ({}) => {\n  const {todos, updateTodo, removeTodo} = useContext(TodoContext)\n  const {todoId, changeScreen} = useContext(ScreenContext)\n  const [modal, setModal] = useState(false)\n\n  const todo = todos.find(t => t.id === todoId)\n\n  const saveHandler = async title => {\n    await updateTodo(todo.id, title)\n    setModal(false)\n  }\n\n  return (\n    <View>\n      <EditModal\n        value={todo.title}\n        visible={modal}\n        onCancel={() => setModal(false)}\n        onSave={saveHandler}\n      />\n\n      <AppCard style={styles.card}>\n        <AppTextBold style={styles.title}>{todo.title}</AppTextBold>\n        <AppButton onPress={() => setModal(true)}>\n          <FontAwesome name='edit' size={20} />\n        </AppButton>\n      </AppCard>\n\n      <View style={styles.buttons}>\n        <View style={styles.button}>\n          <AppButton onPress={() => changeScreen(null)} color={THEME.GREY_COLOR}>\n            <AntDesign name='back' size={20} color='#fff' />\n          </AppButton>\n        </View>\n        <View style={styles.button}>\n          <AppButton\n            color={THEME.DANGER_COLOR}\n            onPress={() => removeTodo(todo.id)}\n          >\n            <FontAwesome name='remove' size={20} color='#fff' />\n          </AppButton>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15\n  },\n  button: {\n    // width: Dimensions.get('window').width / 3\n    width: Dimensions.get('window').width > 400 ? 150 : 100\n  },\n  title: {\n    fontSize: 20\n  }\n})\n"]},"metadata":{},"sourceType":"module"}