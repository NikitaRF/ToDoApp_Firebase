{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/context/screen/ScreenState.js\";\n\nimport React, { useReducer } from \"react\";\nimport { ScreenContext } from \"./screenContext\";\nimport { screenReducer } from \"./screenReducer\";\nimport { CHANGE_SCREEN } from \"../types\";\nexport var ScreenState = function ScreenState(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(screenReducer, null),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var changeScreen = function changeScreen(id) {\n    return dispatch({\n      type: CHANGE_SCREEN,\n      payload: id\n    });\n  };\n\n  return React.createElement(ScreenContext.Provider, {\n    value: {\n      changeScreen: changeScreen,\n      todoId: state\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/context/screen/ScreenState.js"],"names":["React","useReducer","ScreenContext","screenReducer","CHANGE_SCREEN","ScreenState","children","state","dispatch","changeScreen","id","type","payload","todoId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,aAAR;AACA,SAAQC,aAAR;AACA,SAAQC,aAAR;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACzC,oBAA0BL,UAAU,CAACE,aAAD,EAAgB,IAAhB,CAApC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,EAAE;AAAA,WAAIF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,aAAP;AAAsBQ,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAZ;AAAA,GAAvB;;AAEA,SAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC9BD,MAAAA,YAAY,EAAZA,YAD8B;AAE9BI,MAAAA,MAAM,EAAEN;AAFsB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIFD,QAJE,CAAP;AAMH,CAXM","sourcesContent":["import React, {useReducer} from \"react\";\nimport {ScreenContext} from './screenContext'\nimport {screenReducer} from './screenReducer'\nimport {CHANGE_SCREEN} from \"../types\";\n\nexport const ScreenState = ({ children} ) => {\n    const [state, dispatch] = useReducer(screenReducer, null)\n\n    const changeScreen = id => dispatch({type: CHANGE_SCREEN, payload: id})\n\n    return <ScreenContext.Provider value={{\n            changeScreen,\n            todoId: state\n            }}>\n        {children}\n    </ScreenContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}