{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/screens/MainScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AddTodo } from \"../components/AddTodo\";\nimport { Todo } from \"../components/Todo\";\nimport { THEME } from \"../theme\";\nimport { TodoContext } from \"../context/todo/todoContext\";\nimport { ScreenContext } from \"../context/screen/screenContext\";\nimport { AppLoader } from \"../components/ui/AppLoader\";\nimport { AppText } from \"../components/ui/AppText\";\nimport { AppButton } from \"../components/ui/AppButton\";\nexport var MainScreen = function MainScreen() {\n  var _useContext = useContext(TodoContext),\n      addTodo = _useContext.addTodo,\n      todos = _useContext.todos,\n      removeTodo = _useContext.removeTodo,\n      fetchTodos = _useContext.fetchTodos,\n      loading = _useContext.loading,\n      error = _useContext.error;\n\n  var _useContext2 = useContext(ScreenContext),\n      changeScreen = _useContext2.changeScreen;\n\n  var _useState = useState(Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2),\n      _useState2 = _slicedToArray(_useState, 2),\n      deviceWidth = _useState2[0],\n      setDeviceWidth = _useState2[1];\n\n  var test = 'test';\n  var loadTodos = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetchTodos());\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [fetchTodos]);\n  useEffect(function () {\n    loadTodos();\n  }, []);\n  useEffect(function () {\n    var update = function update() {\n      var width = Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2;\n      setDeviceWidth(width);\n    };\n\n    Dimensions.addEventListener('change', update);\n    return function () {\n      Dimensions.removeEventListener('change', update);\n    };\n  });\n\n  if (loading) {\n    return React.createElement(AppLoader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.center,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, React.createElement(AppText, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, error), React.createElement(AppButton, {\n      onPress: loadTodos,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\"));\n  }\n\n  var content = React.createElement(View, {\n    style: {\n      width: deviceWidth\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Todo, {\n        todo: item,\n        onRemove: removeTodo,\n        onOpen: changeScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n\n  if (todos.length === 0) {\n    content = React.createElement(View, {\n      style: styles.imgWrap,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: require(\"../../assets/no-items.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(AddTodo, {\n    onSubmit: addTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), content);\n};\nvar styles = StyleSheet.create({\n  imgWrap: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    height: 300\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'contain'\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  error: {\n    fontSize: 20,\n    paddingBottom: 20,\n    color: THEME.DANGER_COLOR\n  }\n});","map":{"version":3,"sources":["/Users/nikitabeloshapka/webStormProjects/ToDoApp_Firebase/src/screens/MainScreen.js"],"names":["React","useState","useEffect","useContext","useCallback","AddTodo","Todo","THEME","TodoContext","ScreenContext","AppLoader","AppText","AppButton","MainScreen","addTodo","todos","removeTodo","fetchTodos","loading","error","changeScreen","Dimensions","get","width","PADDING_HORIZONTAL","deviceWidth","setDeviceWidth","test","loadTodos","update","addEventListener","removeEventListener","styles","center","content","item","id","toString","length","imgWrap","image","require","StyleSheet","create","alignItems","justifyContent","padding","height","resizeMode","flex","fontSize","paddingBottom","color","DANGER_COLOR"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,WAAjD,QAAoE,OAApE;;;;;;AAEA,SAASC,OAAT;AACA,SAASC,IAAT;AACA,SAASC,KAAT;AACA,SAAQC,WAAR;AACA,SAAQC,aAAR;AACA,SAAQC,SAAR;AACA,SAAQC,OAAR;AACA,SAAQC,SAAR;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,oBAAiEV,UAAU,CAACK,WAAD,CAA3E;AAAA,MAAOM,OAAP,eAAOA,OAAP;AAAA,MAAgBC,KAAhB,eAAgBA,KAAhB;AAAA,MAAuBC,UAAvB,eAAuBA,UAAvB;AAAA,MAAmCC,UAAnC,eAAmCA,UAAnC;AAAA,MAA+CC,OAA/C,eAA+CA,OAA/C;AAAA,MAAwDC,KAAxD,eAAwDA,KAAxD;;AACA,qBAAuBhB,UAAU,CAACM,aAAD,CAAjC;AAAA,MAAOW,YAAP,gBAAOA,YAAP;;AACA,kBAAsCnB,QAAQ,CAC5CoB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiChB,KAAK,CAACiB,kBAAN,GAA2B,CADhB,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAIA,MAAIC,IAAI,GAAG,MAAX;AAEA,MAAMC,SAAS,GAAGxB,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAkBa,UAAU,EAA5B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAAiC,CAACA,UAAD,CAAjC,CAA7B;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACd0B,IAAAA,SAAS;AAEV,GAHQ,EAGN,EAHM,CAAT;AAKA1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM2B,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,UAAMN,KAAK,GACTF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiChB,KAAK,CAACiB,kBAAN,GAA2B,CAD9D;AAEAE,MAAAA,cAAc,CAACH,KAAD,CAAd;AACD,KAJD;;AAMAF,IAAAA,UAAU,CAACS,gBAAX,CAA4B,QAA5B,EAAsCD,MAAtC;AAEA,WAAO,YAAM;AACXR,MAAAA,UAAU,CAACU,mBAAX,CAA+B,QAA/B,EAAyCF,MAAzC;AACD,KAFD;AAGD,GAZQ,CAAT;;AAcA,MAAIX,OAAJ,EAAa;AACX,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEa,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAED,MAAM,CAACb,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,KAA/B,CADF,EAEE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAES,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFF,CADJ;AAMD;;AAED,MAAIM,OAAO,GACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEX,MAAAA,KAAK,EAAEE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAAAU,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAJ;AAAA,KADpB;AAEE,IAAA,IAAI,EAAEtB,KAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGoB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,QAAQ,EAAEnB,UAA5B;AAAwC,QAAA,MAAM,EAAEI,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAYA,MAAIL,KAAK,CAACuB,MAAN,KAAiB,CAArB,EAAwB;AACtBJ,IAAAA,OAAO,GACL,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACO,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEP,MAAM,CAACQ,KADhB;AAEE,MAAA,MAAM,EAAEC,OAAO,6BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAE3B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGoB,OAHH,CADF;AAOD,CA1EM;AA4EP,IAAMF,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,OAAO,EAAE,EAHF;AAIPC,IAAAA,MAAM,EAAE;AAJD,GADsB;AAO/BP,EAAAA,KAAK,EAAE;AACLjB,IAAAA,KAAK,EAAE,MADF;AAELwB,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAPwB;AAY/Bf,EAAAA,MAAM,EAAE;AACNgB,IAAAA,IAAI,EAAE,CADA;AAENJ,IAAAA,cAAc,EAAE,QAFV;AAGND,IAAAA,UAAU,EAAE;AAHN,GAZuB;AAiB/BzB,EAAAA,KAAK,EAAE;AACL+B,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE,EAFV;AAGLC,IAAAA,KAAK,EAAE7C,KAAK,CAAC8C;AAHR;AAjBwB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { StyleSheet, View, FlatList, Image, Dimensions } from 'react-native'\nimport { AddTodo } from '../components/AddTodo'\nimport { Todo } from '../components/Todo'\nimport { THEME } from '../theme'\nimport {TodoContext} from \"../context/todo/todoContext\";\nimport {ScreenContext} from \"../context/screen/screenContext\";\nimport {AppLoader} from \"../components/ui/AppLoader\";\nimport {AppText} from \"../components/ui/AppText\";\nimport {AppButton} from \"../components/ui/AppButton\";\n\nexport const MainScreen = () => {\n  const {addTodo, todos, removeTodo, fetchTodos, loading, error} = useContext(TodoContext)\n  const {changeScreen} = useContext(ScreenContext)\n  const [deviceWidth, setDeviceWidth] = useState(\n    Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2\n  )\n\n  let test = 'test'\n\n  const loadTodos = useCallback(async () => await fetchTodos(), [fetchTodos] )\n\n  useEffect(() => {\n    loadTodos()\n\n  }, [])\n\n  useEffect(() => {\n    const update = () => {\n      const width =\n        Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2\n      setDeviceWidth(width)\n    }\n\n    Dimensions.addEventListener('change', update)\n\n    return () => {\n      Dimensions.removeEventListener('change', update)\n    }\n  })\n\n  if (loading) {\n    return <AppLoader />\n  }\n\n  if (error) {\n    return (\n        <View style={styles.center}>\n          <AppText style={styles.error}>{error}</AppText>\n          <AppButton onPress={loadTodos}>Повторить</AppButton>\n        </View>\n    )\n  }\n\n  let content = (\n    <View style={{ width: deviceWidth }}>\n      <FlatList\n        keyExtractor={item => item.id.toString()}\n        data={todos}\n        renderItem={({ item }) => (\n          <Todo todo={item} onRemove={removeTodo} onOpen={changeScreen} />\n        )}\n      />\n    </View>\n  )\n\n  if (todos.length === 0) {\n    content = (\n      <View style={styles.imgWrap}>\n\n        <Image\n          style={styles.image}\n          source={require('../../assets/no-items.png')}\n        />\n      </View>\n    )\n  }\n\n  return (\n    <View>\n      <AddTodo onSubmit={addTodo} />\n\n      {content}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  imgWrap: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    height: 300\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'contain'\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  error: {\n    fontSize: 20,\n    paddingBottom: 20,\n    color: THEME.DANGER_COLOR,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}